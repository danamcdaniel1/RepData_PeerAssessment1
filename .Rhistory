main = 'Difference between weekdays and weekends',
col = 'blue')
dev.off()
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Difference in activity',
main = 'Difference between weekdays and weekends',
col = colfunc(length(diffweekendseps)))
colfunc <- colorRampPalette(c("red", "blue"))
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Difference in activity',
main = 'Difference between weekdays and weekends',
col = colfunc(length(diffweekendseps)))
diffweekendsteps <- fweekendactivity$steps - fweekdayactivity$steps
lines(fweekendactivity$interval, diffweekendsteps, col = "orange")
colfunc <- colorRampPalette(c("red", "blue"))
setwd("C:\\Users\\Dianshi\\Desktop\\Laptop Stuff\\Reproducible research\\Peer Assessment 1")
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Difference in activity',
main = 'Difference between weekdays and weekends',
col = colfunc(length(diffweekendseps)))
lines(fweekendactivity$interval, diffweekendsteps, col = "orange")
length(diffweekendsteps)
length(fweekendactivity$interval)
plot(fweekendactivity$interval, diffweekendsteps)
colfunc(length(diffweekendsteps))
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Difference in activity',
main = 'Difference between weekdays and weekends',
col = colfunc(length(diffweekendsteps)))
plot(1:288, 1:288, col = colfunc(288))
colfunc <- colorRampPalette(c("blue", "red"))
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Difference in activity',
main = 'Difference between weekdays and weekends',
col = colfunc(length(diffweekendsteps)))
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Difference in activity',
main = 'Difference between weekdays and weekends',
col = colfunc(length(diffweekendsteps)))
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Difference in activity',
main = 'Difference between weekdays and weekends',
col = colfunc(length(diffweekendsteps)))
plot(1:30, rep(1:10,3),col = colfunc(30))
colfunc(c(1,10,2,3,4))
colfunc(c(3,10,2,3,4))
colfunc <- colorRampPalette(c("blue", "red"))
dailydiff <- c(fweekendactivity$interval, diffweekendsteps)
dailydiff <- c(fweekendactivity$interval, diffweekendsteps)
length(fweekendactivity$interval)
length(diffweekendsteps)
g[,c("interval", "diffweekendsteps")] <- c(fweekendactivity$interval, diffweekendsteps)
c(fweekendactivity$interval, diffweekendsteps)
diffweekendsteps
loaddata <- function(){
read.csv("C:\\Users\\Dianshi\\Desktop\\Laptop Stuff\\Reproducible research\\Peer Assessment 1\\activity.csv",
stringsAsFactors = F, header = T)
}
as.datetime <- function(date = "", time = ""){
newtime <- sprintf("%02d:%02d", floor(time / 100), time %% 100)
datetimestr <- sprintf("%s %s", date, newtime)
datetime <- strptime(datetimestr, format = "%Y-%m-%d %H:%M")
datetime
}
## load and process data
x <- loaddata() # raw data
y <- x
y$"datetime" <- as.datetime(x[,"date"], x[,"interval"]) # create as.posixct
y$"interval" <- as.POSIXct(sprintf("%02d:%02d", floor(y$"interval" / 100), y$"interval" %% 100), format = "%H:%M")
z            <- aggregate(y[,"steps"], by = (list(y[,"date"])), function(x) sum(x))  # total number of steps per day
names(z)     <- c("date", "steps taken")
z[,"date"]   <- as.POSIXct(z[,"date"])
a            <- summary(z[,2])
dailymean    <- a[4]
dailymedian  <- a[3]
b            <- aggregate(y[["steps"]],
by = list(y$"interval"),
function(x) mean(x, na.rm = T))
names(b)     <- c("interval", "steps")
## What is mean total number of steps taken per day?
plot(z[,"date"], z[,"steps taken"], type = "l", xlab = "Date", ylab = "Steps taken", main = "Steps per day")
hist(z[,2], main = "Steps taken each day") # histogram of number of steps taken each day
rug(z[,2])
dailymean  # mean number of steps each day
dailymedian # median number of steps each day
## What is the average daily activity pattern?
plot(b$interval, b$steps, type = 'l', xlab = "time", ylab = "steps", main = "Daily activity pattern")
b[b$steps == max(b[,2]),] ## time interval with the most steps
## Input Missing Values
summary(y[,"steps"])[7]
c <- y
names(c) <- names(y)
summary(c$steps)[7]
c[which(is.na(c$steps)), "steps"]<- b[b$interval == c[is.na(c$steps),"interval"], "steps"]
summary(c$steps)[6]
d <- aggregate(c[,"steps"], by = (list(c[,"date"])), function(x) sum(x))
names(d) <- c("interval", "steps")
hist(d[,2], main = "Steps taken each day")
summary(d[,"steps"])[4]
summary(d[,"steps"])[3]
e <- aggregate(c$"steps", by = list(c$"interval"), function(x) mean(x, na.rm = T))
names(e) <- c("interval", "steps")
plot(e$interval, e$steps, type = 'l', xlab = "time", ylab = "steps", main = "Daily activity pattern")
lines(b$interval, b$steps, col = "red")
lines(e$interval, e$steps, col = "blue")
## weekend vs. weekday comparisons.
f <- c
f$day <- weekdays(as.Date(f$date))
fweekend <- f[f$day == "Saturday" | f$day == "Sunday",]
fweekday <- f[!(f$day == "Saturday" | f$day == "Sunday"),]
fweekendactivity <- aggregate(fweekend$"steps", by = list(fweekend$"interval"), function(x) mean(x, na.rm = T))
fweekdayactivity <- aggregate(fweekday$"steps", by = list(fweekday$"interval"), function(x) mean(x, na.rm = T))
names(fweekdayactivity) <- c("interval", "steps")
names(fweekendactivity) <- c("interval", "steps")
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'n',
xlab = "time",
ylab = "steps",
main = "weekday activity pattern")
lines(fweekdayactivity$interval, fweekdayactivity$steps, col = "red")
lines(fweekendactivity$interval, fweekendactivity$steps, col = "blue")
diffweekendsteps <- fweekendactivity$steps - fweekdayactivity$steps
lines(fweekendactivity$interval, diffweekendsteps, col = "orange")
colfunc <- colorRampPalette(c("blue", "red"))
dailydiff <- c(fweekendactivity$interval, diffweekendsteps)
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Difference in activity',
main = 'Difference between weekdays and weekends',
col = colfunc(length(diffweekendsteps)))
lines(min(fweekdayactivity$interval), max(fweekdayactivity$interval), col = 'black')
fweekdayactivity$interval[1:10]
length(fweekdayactivity$interval)
lines(min(fweekdayactivity$interval[1]), max(fweekdayactivity$interval[288]), col = 'black')
rep(0, 3)
lines(fweekdayactivity$interval, rep(0, length(fweekendactivity$interval), col = 'black')
)
?lines
lines(min(fweekdayactivity$interval[1]), max(fweekdayactivity$interval[288]), col = 'black', lty = 2)
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Weekend - Weekday steps',
main = 'Comparison of weekday vs. weekend activity',
col = colfunc(length(diffweekendsteps)))
lines(min(fweekdayactivity$interval[1]), max(fweekdayactivity$interval[288]), col = 'black', lty = 2)
?plot
lines(min(fweekdayactivity$interval[1]), max(fweekdayactivity$interval[288]), col = 'black', lty = 2)
lines(min(fweekdayactivity$interval[1]), max(fweekdayactivity$interval[288]), col = 'black', lty = 3)
lines(min(fweekdayactivity$interval[1]), max(fweekdayactivity$interval[288]), col = 'black', lty = 2)
lines(min(fweekdayactivity$interval[1]), max(fweekdayactivity$interval[288]), col = 'black', lty = 2)
lines(min(fweekdayactivity$interval[1]), max(fweekdayactivity$interval[288]),
col = 'black', lty = 2)
?lines
abline(0,0, col = 'black', lty = 2)
setwd("C:\\Users\\Dianshi\\Desktop\\Laptop Stuff\\Reproducible research\\Peer Assessment 1")
png("ComparisonPlot.png", height = 480, width = 480)
par(mfrow = c(3,1))
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Steps',
main = "Weekday activity",
col  = 'black')
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Steps',
main = "Weekend activity",
col  = "black")
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Weekend - Weekday steps',
main = 'Comparison of weekday vs. weekend activity',
col = colfunc(length(diffweekendsteps)))
abline(0,0, col = 'black', lty = 2)
dev.off()
plot(fweekendactivity$interval, fweekdayactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Steps',
main = "Weekend activity",
col  = "purple")
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Steps',
main = "Weekday activity",
col  = 'black')
plot(fweekendactivity$interval, fweekendactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Steps',
main = "Weekend activity",
col  = "purple")
png("ComparisonPlot.png", height = 480, width = 480)
par(mfrow = c(3,1))
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Steps',
main = "Weekday activity",
col  = 'black')
plot(fweekendactivity$interval, fweekendactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Steps',
main = "Weekend activity",
col  = "purple")
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'l',
xlab = 'Time',
ylab = 'Weekend - Weekday steps',
main = 'Comparison of weekday vs. weekend activity',
col = colfunc(length(diffweekendsteps)))
abline(0,0, col = 'black', lty = 2)
dev.off()
plot()
curve(fweekdayactivity$interval, fweekdayactivity$steps)
plot(fweekdayactivity$interval, fwekdayactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Weekend - Weekday steps',
main = 'Comparison of weekday vs. weekend activity',
col = colfunc(length(diffweekendsteps)))
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'l',
xlab = 'Time',
ylab = 'Weekend - Weekday steps',
main = 'Comparison of weekday vs. weekend activity',
col = colfunc(length(diffweekendsteps)))
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'blue')
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'purple')
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'lavendar')
?colors
colors(distinct = T)
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'orchid')
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'teal')
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'ivory')
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'light blue')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'mint')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'mintcream')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'orange')
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'light blue')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'light green')
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'tomato')
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'thistle')
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'sienna')
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'seagreen')
setwd("C:\\Users\\Dianshi\\Desktop\\Laptop Stuff\\Reproducible research\\Peer Assessment 1")
png("ComparisonPlot.png", height = 480, width = 480)
par(mfrow = c(3,1))
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'n',
xlab = 'Time',
ylab = 'Steps',
main = "Weekday activity",
col  = 'black')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'light green')
plot(fweekendactivity$interval, fweekendactivity$steps,
type = 'n',
xlab = 'Time',
ylab = 'Steps',
main = "Weekend activity",
col  = "purple")
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'light blue')
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'n',
xlab = 'Time',
ylab = 'Weekend - Weekday steps',
main = 'Comparison of weekday vs. weekend activity',
col = colfunc(length(diffweekendsteps)))
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'seagreen')
abline(0,0, col = 'black', lty = 2)
dev.off()
png("ComparisonPlot.png", height = 480, width = 480)
par(mfrow = c(3,1))
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'n',
xlab = 'Time',
ylab = 'Steps',
main = "Weekday activity",
col  = 'black')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'red')
plot(fweekendactivity$interval, fweekendactivity$steps,
type = 'n',
xlab = 'Time',
ylab = 'Steps',
main = "Weekend activity",
col  = "purple")
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'yellow')
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'n',
xlab = 'Time',
ylab = 'Weekend - Weekday steps',
main = 'Comparison of weekday vs. weekend activity',
col = colfunc(length(diffweekendsteps)))
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'seagreen')
abline(0,0, col = 'black', lty = 2)
dev.off()
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'blueviolet')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'azure')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'azure4')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'steelblue')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'steelblue3')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'steelblue4')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'steelblue2')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'steelblue1')
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'orchid2')
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'blueviolet')
png("ComparisonPlot.png", height = 480, width = 480)
par(mfrow = c(3,1))
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'n',
xlab = 'Time',
ylab = 'Steps',
main = "Weekday activity",
col  = 'black')
polygon(fweekdayactivity$interval, fweekdayactivity$steps, col = 'steelblue1')
plot(fweekendactivity$interval, fweekendactivity$steps,
type = 'n',
xlab = 'Time',
ylab = 'Steps',
main = "Weekend activity",
col  = "purple")
polygon(fweekendactivity$interval, fweekendactivity$steps, col = 'orchid2')
plot(fweekdayactivity$interval, diffweekendsteps,
type = 'n',
xlab = 'Time',
ylab = 'Weekend - Weekday steps',
main = 'Comparison of weekday vs. weekend activity',
col = colfunc(length(diffweekendsteps)))
polygon(fweekdayactivity$interval, diffweekendsteps, col = 'blueviolet')
abline(0,0, col = 'black', lty = 2)
dev.off()
plot(fweekdayactivity$interval, fweekdayactivity$steps,
type = 'n',
xlab = "time",
ylab = "steps",
main = "weekday activity pattern")
lines(fweekdayactivity$interval, fweekdayactivity$steps, col = "red")
lines(fweekendactivity$interval, fweekendactivity$steps, col = "blue")
plot(e$interval, e$steps, type = 'l', xlab = "time", ylab = "steps", main = "Daily activity pattern")
lines(b$interval, b$steps, col = "red")
lines(e$interval, e$steps, col = "blue")
plot(b$interval, b$steps, type = 'l', xlab = "time", ylab = "steps", main = "Daily activity pattern")
b[b$steps == max(b[,2]),] ## time interval with the most steps
plot(b$interval, b$steps, type = 'l', xlab = "time", ylab = "steps", main = "Daily activity pattern")
b[b$steps == max(b[,2]),] ## time interval with the most steps
lines(b$interval, b$steps, col = "red")
lines(e$interval, e$steps, col = "blue")
plot(z[,"date"], z[,"steps taken"], type = "l", xlab = "Date", ylab = "Steps taken", main = "Steps per day")
hist(z[,2], main = "Steps taken each day") # histogram of number of steps taken each day
rug(z[,2])
rug(z[,2], col = "orchid2")
rug(z[,2], col = "orchid")
rug(z[,2], col = "orchid3")
rug(z[,2], col = rgb(0.2, 0.3, 0.6, 0.4))
rug(z[,2], col = rgb(0.2, 0.3, 0.6, 0.4))
hist(z[,2], main = "Steps taken each day") # histogram of number of steps taken each day
rug(z[,2], col = rgb(0.2, 0.3, 0.6, 0.4))
?rgb()
rug(z[,2], col = rgb(0, 0, 1)
rug(z[,2], col = rgb(0, 0, 1))
hist(z[,2], main = "Steps taken each day") # histogram of number of steps taken each day
rug(z[,2], col = rgb(0, 0, 1))
rug(z[,2], col = rgb(0, 0.5, 8, 0.5), lwd = 2)
rug(z[,2], col = rgb(0, 0.5, 0.8, 0.5), lwd = 2)
?rug
hist(z[,2], main = "Steps taken each day") # histogram of number of steps taken each day
rug(z[,2], col = rgb(0, 0.5, 0.8, 0.5), lwd = 2)
rug(z[,2], col = rgb(0, 0.5, 0.8, 0.5), lwd = 1)
rug(z[,2], col = rgb(0, 0.5, 0.8, 0.5), lwd = 0.5)
rug(z[,2], col = rgb(0, 0.5, 0.8, 0.5))
by = list(y$"interval"),
?rgb()
rug(z[,2], col = rgb(0, 0.5, 0.8))
rug(z[,2], col = rgb(0, 0.5, 0.8), lwd = 2)
rug(z[,2], col = rgb(0, 0.5, 0.8, 5), lwd = 2)
rug(z[,2], col = rgb(0, 0.5, 0.8, 0.1), lwd = 2)
hist(z[,2], main = "Steps taken each day") # histogram of number of steps taken each day
rug(z[,2], col = rgb(0, 0.5, 0.8, 0.1), lwd = 2)
rug(z[,2], col = rgb(0, 0.5, 0.8, 0.9), lwd = 2)
?rug
?rgb()
rug(z[,2], col = rgb(red = 0, green = 0.5, blue =0.8, alpha = 0.9), lwd = 2)
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.") # histogram of number of steps taken each day
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
col = "turquoise")
?lines()
rug(z[,2], col = 'turquoise', lwd = 2)
abline(v = dailymean, col = 'turquiose2')
abline(v = dailymean, col = 'turquiose1')
colors()
abline(v = dailymean, col = 'seashell')
abline(v = dailymean, col = 'springgreen')
hist()
?hist()
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = "9"
col = "turquoise")
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
col = "turquoise")
rug(z[,2], col = 'turquoise', lwd = 2)
colors()
abline(v = dailymean, col = 'aquamarine', lty = 2, lwd = 1.5)
abline(v = dailymean, col = 'aquamarine', lty = 2, lwd = 2.5)
rug(z[,2], col = 'turquoise4', lwd = 2)
rgb()
?rgb()
abline(v = dailymean, col = c(col2rgb(steelblue), 0.5), lty = 2, lwd = 2.5)
abline(v = dailymean, col = c(col2rgb('steelblue'), 0.5), lty = 2, lwd = 2.5)
col2rgb('steelblue')
col2rgb('steelblue')/255
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
col = "turquoise")
rug(z[,2], col = 'turquoise4', lwd = 2)
abline(v = dailymean, col = c(col2rgb('steelblue')/255, 0.5), lty = 2, lwd = 2.5)
abline(v = dailymean, col = c(col2rgb('steelblue'), 0.5), lty = 2, lwd = 2.5)
abline(v = dailymean, col = c(col2rgb('steelblue'),), lty = 2, lwd = 2.5)
abline(v = dailymean, col = col2rgb('steelblue'), lty = 2, lwd = 2.5)
abline(v = dailymean, col = col2rgb('blue'), lty = 2, lwd = 2.5)
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
col = "turquoise")
rug(z[,2], col = 'turquoise4', lwd = 2)
abline(v = dailymean, col = col2rgb('blue'), lty = 2, lwd = 2.5)
abline(v = dailymean, col = "blue", lty = 2, lwd = 2.5)
abline(v = dailymedian, col = "red", lty = 2, lwd = 2.5)
ylim = c(min(z[,2]), max(z[,2]))
min(z[,2])
z[,2]
min(z[,2], na.rm = T)
ylim = c(min(z[,2], na.rm = T), max(z[,2], na.rm = T)+5)
a <- hist(z[,2])
a
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
ylim = c(0,30)
col = "turquoise")
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
ylim = c(0,30),
col = "turquoise")
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
ylim = c(0,25),
col = "turquoise")
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
ylim = c(0,20),
col = "turquoise")
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
ylim = c(0,20),
col = "turquoise")
rug(z[,2], col = 'turquoise4', lwd = 2)
hist(z[,2], main = "Steps taken each day",
xlab = "Number of steps",
ylab = "Number of days Oct. to Dec.",
breaks = 9,
ylim = c(0,20),
col = "steelgrey")
colors()
abline(v = dailymean, col = "palegreen", lty = 2, lwd = 2.5)
abline(v = dailymean, col = "peru", lty = 2, lwd = 2.5)
library(knitr)
install.packages("updatr")
install.packages("installr")
library(installr)
installr()
updateR()
